//------------------------------------------------------------------------------
// Этот класс не технологический, его можно менять в соответствии с
// потребностями проекта
//------------------------------------------------------------------------------

namespace ICSSoft.STORMNET.Web.Controls
{
    /// <summary>
    /// Базовая форма редактирования.
    /// </summary>
    /// <typeparam name="T">
    /// Тип редактируемого объекта.
    /// </typeparam>
    public abstract class BaseEditForm<T> : AjaxControls.Forms.BaseEditForm<T> where T : DataObject
    {
        /// <summary>
        /// Создание формы редактирования с указанием предтавления, по которому будет зачитан редактируемый объект.
        /// </summary>
        /// <param name="viewName">Представление по которому будет зачитан редактируемый объект.</param>
        protected BaseEditForm(string viewName)
            : base(viewName)
        {
        }

        /// <summary>
        /// Создание формы редактирования с указанием представления, 
        /// по которому будет зачитан редактируемый объект и наименованием строки соединия для сервиса данных.
        /// </summary>
        /// <param name="viewName">Представление по которому будет зачитан редактируемый объект.</param>
        /// <param name="connStrName">Наименование строки соединения для сервиса данных. Позволяет реализовать простейшую многобазность.</param>
        protected BaseEditForm(string viewName, string connStrName)
            : base(viewName, connStrName)
        {
        }

        /// <summary>
        /// Конструктор базовой формы редактирвоания с указанием конкретного представления для вычитки редактируемого объекта данных.
        /// </summary>
        /// <param name="view">Представление для вычитки редактируемого объекта данных.</param>
        protected BaseEditForm(View view)
            : base(view, string.Empty)
        {
        }

        /// <summary>
        /// Конструктор базовой формы редактирвоания с указанием конкретного представления для вычитки редактируемого объекта данных и
        /// наименования строки соединения.
        /// </summary>
        /// <param name="view">Представление для вычитки редактируемого объекта данных.</param>
        /// <param name="connStrName">Наименование строки соединения для сервиса данных. Позволяет реализовать простейшую многобазность.</param>
        protected BaseEditForm(View view, string connStrName)
            : base(view, connStrName)
        {
        }
    }
}